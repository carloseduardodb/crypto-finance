// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"crypto-finance/src/domain/usecase"
	"crypto-finance/src/infra"
	"crypto-finance/src/presentation/controller"
	"crypto-finance/src/presentation/repository"
)

// Injectors from wire.go:

func initializeApp() (*App, error) {
	httpRepository := infra.NewHttpRepository()
	firebaseRepository := infra.NewFirebaseRepository()
	authUseCase := usecase.NewAuthUseCase(firebaseRepository)
	authController := controller.NewAuthController(authUseCase)
	statusController := controller.NewStatusController()
	app := &App{
		Router:           httpRepository,
		AuthController:   authController,
		StatusController: statusController,
	}
	return app, nil
}

// wire.go:

type App struct {
	Router           presentation_repository.HttpRepository
	AuthController   *controller.AuthController
	StatusController *controller.StatusController
}

func InitializeApp() error {
	_, err := initializeApp()
	if err != nil {
		return err
	}

	return nil
}
